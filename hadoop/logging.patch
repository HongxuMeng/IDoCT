diff --git a/hadoop-common-project/hadoop-common/pom.xml b/hadoop-common-project/hadoop-common/pom.xml
index 8a9ba1757b2..470126c0432 100644
--- a/hadoop-common-project/hadoop-common/pom.xml
+++ b/hadoop-common-project/hadoop-common/pom.xml
@@ -513,6 +513,7 @@
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-surefire-plugin</artifactId>
+        <version>3.0.0-M4</version>
         <configuration>
           <systemPropertyVariables>
             <runningWithNative>${runningWithNative}</runningWithNative>
diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
index aedde6b5e62..d770715276f 100755
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
@@ -1195,6 +1195,14 @@ private String substituteVars(String expr) {
                                     + MAX_SUBST + " " + expr);
   }
   
+  private String getStackTrace() {
+    String stacktrace = " ";
+    for (StackTraceElement element : Thread.currentThread().getStackTrace()) {
+      stacktrace = stacktrace.concat(element.getClassName() + "\t");
+    }
+    return stacktrace;
+  }
+
   String getenv(String name) {
     return System.getenv(name);
   }
@@ -1219,11 +1227,14 @@ String getProperty(String key) {
    *         or null if no such property exists.
    */
   public String get(String name) {
+    String ctestParam = name; //CTEST
     String[] names = handleDeprecation(deprecationContext.get(), name);
     String result = null;
     for(String n : names) {
+      ctestParam = n; //CTEST
       result = substituteVars(getProps().getProperty(n));
     }
+    LOG.warn("[CTEST][GET-PARAM] " + ctestParam); //CTEST
     return result;
   }
 
@@ -1311,11 +1322,14 @@ public String getTrimmed(String name, String defaultValue) {
    *         its replacing property and null if no such property exists.
    */
   public String getRaw(String name) {
+    String ctestParam = name; //CTEST
     String[] names = handleDeprecation(deprecationContext.get(), name);
     String result = null;
     for(String n : names) {
+      ctestParam = n; //CTEST
       result = getProps().getProperty(n);
     }
+    LOG.warn("[CTEST][GET-PARAM] " + ctestParam); //CTEST
     return result;
   }
 
@@ -1363,6 +1377,10 @@ public void set(String name, String value) {
     set(name, value, null);
   }
   
+  public void set(String name, String value, String source) {
+    set(name, value, source, true);
+  }
+
   /** 
    * Set the <code>value</code> of the <code>name</code> property. If 
    * <code>name</code> is deprecated, it also sets the <code>value</code> to
@@ -1375,7 +1393,7 @@ public void set(String name, String value) {
    * (For debugging).
    * @throws IllegalArgumentException when the value or name is null.
    */
-  public void set(String name, String value, String source) {
+  public void set(String name, String value, String source, boolean log_enabled) {
     Preconditions.checkArgument(
         name != null,
         "Property name must not be null");
@@ -1387,6 +1405,7 @@ public void set(String name, String value, String source) {
     if (deprecations.getDeprecatedKeyMap().isEmpty()) {
       getProps();
     }
+    if(log_enabled) LOG.warn("[CTEST][SET-PARAM] " + name + getStackTrace()); //CTEST
     getOverlay().setProperty(name, value);
     getProps().setProperty(name, value);
     String newSource = (source == null ? "programmatically" : source);
@@ -1397,6 +1416,7 @@ public void set(String name, String value, String source) {
       if(altNames != null) {
         for(String n: altNames) {
           if(!n.equals(name)) {
+            if(log_enabled) LOG.warn("[CTEST][SET-PARAM] " + n + getStackTrace()); //CTEST
             getOverlay().setProperty(n, value);
             getProps().setProperty(n, value);
             putIntoUpdatingResource(n, new String[] {newSource});
@@ -1408,6 +1428,7 @@ public void set(String name, String value, String source) {
       String[] names = handleDeprecation(deprecationContext.get(), name);
       String altSource = "because " + name + " is deprecated";
       for(String n : names) {
+        if(log_enabled) LOG.warn("[CTEST][SET-PARAM] " + n + getStackTrace()); //CTEST
         getOverlay().setProperty(n, value);
         getProps().setProperty(n, value);
         putIntoUpdatingResource(n, new String[] {altSource});
@@ -1480,11 +1501,14 @@ private synchronized Properties getOverlay() {
    *         doesn't exist.                    
    */
   public String get(String name, String defaultValue) {
+    String ctestParam = name; //CTEST
     String[] names = handleDeprecation(deprecationContext.get(), name);
     String result = null;
     for(String n : names) {
+      ctestParam = n; //CTEST
       result = substituteVars(getProps().getProperty(n, defaultValue));
     }
+    LOG.warn("[CTEST][GET-PARAM] " + ctestParam); //CTEST
     return result;
   }
 
diff --git a/hadoop-hdfs-project/hadoop-hdfs/pom.xml b/hadoop-hdfs-project/hadoop-hdfs/pom.xml
index fc40137c997..22d40ea9440 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/pom.xml
+++ b/hadoop-hdfs-project/hadoop-hdfs/pom.xml
@@ -226,6 +226,7 @@ https://maven.apache.org/xsd/maven-4.0.0.xsd">
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-surefire-plugin</artifactId>
+        <version>3.0.0-M4</version>
         <configuration>
           <systemPropertyVariables>
             <runningWithNative>${runningWithNative}</runningWithNative>
diff --git a/pom.xml b/pom.xml
index 74a036e374a..bedccf2887b 100644
--- a/pom.xml
+++ b/pom.xml
@@ -142,6 +142,13 @@ xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/x
   <build>
     <pluginManagement>
       <plugins>
+        <plugin>
+          <groupId>org.apache.maven.plugins</groupId>
+          <artifactId>maven-surefire-plugin</artifactId>
+          <configuration>
+            <reportFormat>plain</reportFormat>
+          </configuration>
+        </plugin>
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-dependency-plugin</artifactId>
